/******/ // The require scope
/******/ var __wp_require__ = {};
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__wp_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__wp_require__.o(definition, key) && !__wp_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__wp_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/************************************************************************/
var __wp_exports__ = {};

// EXPORTS
__wp_require__.d(__wp_exports__, {
  "Z": () => (/* binding */ AwesomeHfc)
});

;// CONCATENATED MODULE: ./.hfc/propnames.js
/* harmony default export */ const propnames = ([["size","class","color"],[],[]]);

;// CONCATENATED MODULE: ./src/index.ts

const svgAttrs = [["xmlns","http://www.w3.org/2000/svg"],["viewBox","0 0 24 24"]];
const svgHtml = "<path d=\"M18 22l-.01-6L14 12l3.99-4.01L18 2H6v6l4 4l-4 3.99V22h12zM8 7.5V4h8v3.5l-4 4l-4-4z\" fill=\"currentColor\"></path>";
class AwesomeHfc {
    constructor(container, props) {
        this.container = container;
        for (let i = 0; i < svgAttrs.length; i++) {
            container.setAttribute(svgAttrs[i][0], svgAttrs[i][1]);
        }
        this.render(props);
        container.innerHTML = svgHtml;
    }
    changed(props) {
        this.render(props);
    }
    disconnected() { }
    render(props) {
        if (props.attrs.size) {
            this.container.setAttribute("width", props.attrs.size);
            this.container.setAttribute("height", props.attrs.size);
        }
        if (props.attrs.class) {
            this.container.setAttributeNS(null, "class", props.attrs.class);
        }
        if (props.attrs.color) {
            this.container.style.fill = props.attrs.color;
            this.container.style.color = props.attrs.color;
        }
        bindToElement(this.container, props.others);
    }
}
AwesomeHfc.tag = "svg";
AwesomeHfc.props = propnames;
function bindToElement(elem, obj) {
    for (let i = 0, keys = Object.keys(obj); i < keys.length; i++) {
        const key = keys[i];
        const value = obj[key];
        if (key === "style") {
            if (typeof value === "object") {
                Object.assign(elem.style, value);
            }
            else {
                elem.style.cssText += value;
            }
            continue;
        }
        if (typeof value === "function") {
            elem[key] = function (event) {
                value(event);
            };
        }
        else {
            elem.setAttribute(key, value);
        }
    }
}

var __wp_exports__default = __wp_exports__.Z;
export { __wp_exports__default as default };
